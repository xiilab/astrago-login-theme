name: 배포
on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '**' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create keycloak-theme.jar
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.18.2]
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install
      - run: DISABLE_ESLINT_PLUGIN=true npm run build
      - run: DISABLE_ESLINT_PLUGIN=true npx keycloakify
      - run: mv build_keycloak/target/retrocompat-*.jar build_keycloak/target/retrocompat-keycloak-theme.jar
      - run: mv build_keycloak/target/astrago-*.jar build_keycloak/target/keycloak-theme.jar

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            - 깃헙 액션에서 자동으로 생성됨
          draft: true
          prerelease: false
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build_keycloak/target/keycloak-theme.jar
          asset_name: keycloak-theme.jar
          asset_content_type: application/java-archive
      - name: Publish release
        uses: StuYarrow/publish-release@v1.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          id: ${{ steps.create_release.outputs.id }}
      
      # 새로 추가할 Docker 이미지 빌드 단계들
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set version (4자리 커밋 해시)
        id: version
        run: |
          VERSION=$(git rev-parse --short=4 HEAD)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.keycloak
          push: true
          tags: |
            xiilab/astrago-keycloak-theme:${{ steps.version.outputs.version }}

  # update_astrago_deployment:
  #   needs: build
  #   name: Update astrago-deployment files
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout astrago-deployment
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.TOKEN }}
  #         repository: 'xiilab/astrago-deployment'
  #         ref: feature/keycloak-astrago-theme
      
  #     - name: Update theme version in common values
  #       run: |
  #         VERSION="${{ needs.build.outputs.version }}"
  #         yq eval ".keycloak.themeVersion = \"$VERSION\"" -i environments/common/values.yaml
      
  #     - name: Commit and push changes
  #       run: |
  #         git config --global user.email "action@github.com"
  #         git config --global user.name "GitHub Action"
  #         git add environments/
  #         git commit -m "Update keycloak theme to ${{ needs.build.outputs.version }}"
  #         git push
