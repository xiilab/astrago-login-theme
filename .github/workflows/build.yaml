name: 배포
on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '**' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: bahmutov/npm-install@v1
      - run: yarn build
      - run: npx keycloakify
        env:
          XDG_CACHE_HOME: "/home/runner/.cache/yarn"
      - run: mv build_keycloak/target/retrocompat-*.jar build_keycloak/target/retrocompat-keycloak-theme.jar
      - run: mv build_keycloak/target/*.jar build_keycloak/target/keycloak-theme.jar
    
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            - 깃헙 액션에서 자동으로 생성됨
          draft: true
          prerelease: false
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build_keycloak/target/keycloak-theme.jar
          asset_name: keycloak-theme-${{github.ref_name}}.jar
          asset_content_type: application/java-archive
      - name: Publish release
        uses: StuYarrow/publish-release@v1.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          id: ${{ steps.create_release.outputs.id }}

  # change_uyuni_deploy:
  #   if: false == contains(github.ref_name , '-') #v1.2.5.4-seoul-tech 같은 - 문자가 없도록 조건문 추가
  #   needs: build
  #   name: 릴리즈 배포후 설치코드 변경
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout uyuni-infra
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.TOKEN }}
  #         repository: 'xiilab/uyuni-infra'
  #     - name: master 이미지 정보 수정
  #       if: ${{ steps.extract_branch.outputs.branch == 'main' }}
  #       uses: mikefarah/yq@master
  #       with:
  #         cmd: |
  #           yq -i '.uyuni.keycloak.repository = "xiilab/astrago-keycloak-theme"' 'environments/dev/values.yaml'
  #           yq -i '.uyuni.keycloak.imageTag = "${{github.ref_name}}"' 'environments/dev/values.yaml'
  #           yq -i '.uyuni.keycloak.repository = "xiilab/astrago-keycloak-theme"' 'environments/default/values.yaml'
  #           yq -i '.uyuni.keycloak.imageTag = "${{github.ref_name}}"' 'environments/default/values.yaml'
  #     - run: |
  #         git config --global user.email "je.kim@xiilab.com"
  #         git config --global user.name "100milliongold"
  #         git add ./environments
  #         git commit -m "${{ steps.date.outputs.date }} 김재억 님께서 제작하신 github acrion 에서 치환됨"
  #         git push

  # change_uyuni_deploy_dev:
  #   if: false == contains(github.ref_name , '-') #v1.2.5.4-seoul-tech 같은 - 문자가 없도록 조건문 추가
  #   needs: build
  #   name: 릴리즈 배포후 설치코드 변경 DEV
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Uyuni_Deploy DEV
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.TOKEN }}
  #         repository: 'xiilab/Uyuni_Deploy'
  #         ref: develop
  #     - run: |
  #         git config --global user.email "je.kim@xiilab.com"
  #         git config --global user.name "100milliongold"
  #         sed -i 's|\<themeUrl.*|themeUrl: https://github.com/xiilab/keycloak-theme-uyuni/releases/download/${{github.ref_name}}/uyuni-suite-keycloak-theme-${{github.ref_name}}.jar|' ./environments/default/values.yaml
  #         git add ./environments/default/values.yaml
  #         git commit -m "${{ steps.date.outputs.date }} 김재억 님께서 제작하신 github acrion 에서 치환됨"
  #         git push