name: Î∞∞Ìè¨
on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '**' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create keycloak-theme.jar
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.18.2]
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install
      - run: DISABLE_ESLINT_PLUGIN=true npm run build
      - run: DISABLE_ESLINT_PLUGIN=true npx keycloakify
      - run: mv build_keycloak/target/retrocompat-*.jar build_keycloak/target/retrocompat-keycloak-theme.jar
      - run: mv build_keycloak/target/astrago-*.jar build_keycloak/target/keycloak-theme.jar

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            - ÍπÉÌóô Ïï°ÏÖòÏóêÏÑú ÏûêÎèôÏúºÎ°ú ÏÉùÏÑ±Îê®
          draft: true
          prerelease: false
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build_keycloak/target/keycloak-theme.jar
          asset_name: keycloak-theme.jar
          asset_content_type: application/java-archive
      - name: Publish release
        uses: StuYarrow/publish-release@v1.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          id: ${{ steps.create_release.outputs.id }}
      
      # ÏÉàÎ°ú Ï∂îÍ∞ÄÌï† Docker Ïù¥ÎØ∏ÏßÄ ÎπåÎìú Îã®Í≥ÑÎì§
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set version (ÌÉúÍ∑∏ Ïù¥Î¶Ñ)
        id: version
        run: |
          VERSION=${{ github.ref_name }}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            xiilab/astrago-keycloak-theme:${{ steps.version.outputs.version }}

  update_astrago_deployment:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    name: Update astrago-deployment files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout astrago-deployment
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}
          repository: 'xiilab/astrago-deployment'
          #ref: release
          #yq eval ".keycloak.image.tag = \"$VERSION\"" -i environments/prod/values.yaml
          ref: stabilize/1.0
      
      - name: Update theme version in common values
        run: |
          VERSION="${{ needs.build.outputs.version }}"
          yq eval ".keycloak.image.tag = \"$VERSION\"" -i helmfile/environments/customers/xiilab/values.yaml
      
      - name: Commit and push changes
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add environments/
          git commit -m "Update keycloak theme to ${{ needs.build.outputs.version }}"
          git push


  notify_slack:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build, update_astrago_deployment]
    runs-on: ubuntu-latest
    permissions:
      actions: 'read'
    steps:
      - name: Send Slack Notification
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          STATUS="${{ needs.build.result == 'success' && needs.update_astrago_deployment.result == 'success' && '‚úÖ Success' || '‚ùå Failed' }}"
          IMAGE_TAG="${{ needs.build.outputs.version }}"
          COMMIT_MSG=$(echo "$COMMIT_MESSAGE" | head -1)

          # ÏÑ±Í≥µ/Ïã§Ìå®Ïóê Îî∞Î•∏ ÏÉâÏÉÅ ÏÑ§Ï†ï
          if [[ "${{ needs.build.result }}" == "success" && "${{ needs.update_astrago_deployment.result }}" == "success" ]]; then
            COLOR="#36a64f"
            STATUS_EMOJI="‚úÖ"
            STATUS_TEXT="Success"
          else
            COLOR="#ff0000"
            STATUS_EMOJI="‚ùå"
            STATUS_TEXT="Failed"
          fi

          curl -X POST -H 'Content-type: application/json' \
            --data "{
              \"channel\": \"#_astrago_deploy\",
              \"username\": \"Astrago Keycloak Theme Deploy\",
              \"icon_emoji\": \":art:\",
              \"text\": \"üé® Keycloak Theme Deployment ${STATUS_TEXT} - ${{ github.ref_name }}\",
              \"blocks\": [
                {
                  \"type\": \"header\",
                  \"text\": {
                    \"type\": \"plain_text\",
                    \"text\": \"${STATUS_EMOJI} Keycloak Theme Deployment ${STATUS_TEXT}\"
                  }
                },
                {
                  \"type\": \"section\",
                  \"fields\": [
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Version Tag:*\\n${{ github.ref_name }}\"
                    },
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Status:*\\n${STATUS_EMOJI} ${STATUS_TEXT}\"
                    },
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Docker Image:*\\nxiilab/astrago-keycloak-theme:${IMAGE_TAG}\"
                    },
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Released by:*\\n${{ github.actor }}\"
                    }
                  ]
                },
                {
                  \"type\": \"section\",
                  \"text\": {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Commit Message:* ${COMMIT_MSG}\"
                  }
                },
                {
                  \"type\": \"actions\",
                  \"elements\": [
                    {
                      \"type\": \"button\",
                      \"text\": {
                        \"type\": \"plain_text\",
                        \"text\": \"üì¶ View Release\"
                      },
                      \"url\": \"${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }}\",
                      \"style\": \"primary\"
                    },
                    {
                      \"type\": \"button\",
                      \"text\": {
                        \"type\": \"plain_text\",
                        \"text\": \"üê≥ Docker Hub\"
                      },
                      \"url\": \"https://hub.docker.com/r/xiilab/astrago-keycloak-theme/tags\"
                    },
                    {
                      \"type\": \"button\",
                      \"text\": {
                        \"type\": \"plain_text\",
                        \"text\": \"üìã View Workflow\"
                      },
                      \"url\": \"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"
                    }
                  ]
                }
              ]
            }" \
            ${{ secrets.ASTRAGO_DEPLOY_WEBHOOK_URL }}
